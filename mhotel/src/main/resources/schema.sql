DROP TABLE HOTEL.CUSTOMER_RECORD IF EXISTS;
DROP TABLE HOTEL.ROOM IF EXISTS;
DROP TABLE HOTEL.HOTEL IF EXISTS;
DROP TABLE HOTEL.CUSTOMER IF EXISTS;
DROP TABLE HOTEL.ADDRESS IF EXISTS;
DROP TABLE HOTEL.USERS IF EXISTS;
DROP TABLE HOTEL.USER_ROLES IF EXISTS;

DROP SCHEMA HOTEL;
CREATE SCHEMA IF NOT EXISTS HOTEL AUTHORIZATION XX;  
--CREATE SEQUENCE HOTEL.SYSTEM_SEQUENCE_825D73F7_2D4B_4B63_9958_A1142BC3EF8F START WITH 54 BELONGS_TO_TABLE;    
--CREATE SEQUENCE HOTEL.SYSTEM_SEQUENCE_F82FC407_FB44_4D96_AF9D_63913156502B START WITH 34 BELONGS_TO_TABLE;    
--CREATE SEQUENCE HOTEL.SYSTEM_SEQUENCE_498CAFED_61A2_4D3B_AE40_838B06B881F8 START WITH 3 BELONGS_TO_TABLE;     
--CREATE SEQUENCE HOTEL.SYSTEM_SEQUENCE_B6D1BA93_7D0A_4D6D_B2F4_29C9CC63ED1A START WITH 39 BELONGS_TO_TABLE;    
--CREATE SEQUENCE HOTEL.SYSTEM_SEQUENCE_B438368F_846E_4ECE_8100_86CAC9673350 START WITH 2 BELONGS_TO_TABLE;     

CREATE TABLE HOTEL.ADDRESS(
    ID SERIAL NOT NULL PRIMARY KEY,
    CITY VARCHAR(255),
    COUNTRY VARCHAR(255),
    ADDRESS_NUMBER VARCHAR(255),
    ZIP_CODE VARCHAR(255),
    STREET VARCHAR(255)
);             
--ALTER TABLE HOTEL.ADDRESS ADD PRIMARY KEY(ID);  
CREATE TABLE HOTEL.CUSTOMER(
    ID SERIAL NOT NULL PRIMARY KEY,
    LEGAL_ID VARCHAR(255),
    LEGAL_ID_TYPE VARCHAR(255),
    NAME VARCHAR(255),
    SEX VARCHAR(255),
    ADDRESS_ID BIGINT
);   
--ALTER TABLE HOTEL.CUSTOMER ADD CONSTRAINT HOTEL.CONSTRAINT_5 PRIMARY KEY(ID); 
CREATE TABLE HOTEL.HOTEL(
    ID SERIAL NOT NULL PRIMARY KEY,
    NAME VARCHAR(128),
    RATING TINYINT,
    ADDRESS_ID INTEGER
);       
--ALTER TABLE HOTEL.HOTEL ADD CONSTRAINT HOTEL.CONSTRAINT_4 PRIMARY KEY(ID);
CREATE TABLE HOTEL.ROOM(
    ID SERIAL NOT NULL PRIMARY KEY,
    FLOOR_NBR TINYINT,
    ROOM_NBR VARCHAR(32),
    BED_NBR TINYINT,
    AVAILABLE_FOR_RENT BOOLEAN,
    HOTEL_ID INTEGER
);             
--ALTER TABLE HOTEL.ROOM ADD CONSTRAINT HOTEL.CONSTRAINT_2 PRIMARY KEY(ID);     
CREATE TABLE HOTEL.CUSTOMER_RECORD(
    ID SERIAL NOT NULL PRIMARY KEY,
    CUSTOMER_ID INTEGER,
    ROOM_ID INTEGER,
    CHECKED_IN TIMESTAMP NOT NULL,
    CHECKED_OUT TIMESTAMP
);   
--ALTER TABLE HOTEL.CUSTOMER_RECORD ADD CONSTRAINT HOTEL.CONSTRAINT_3 PRIMARY KEY(ID);  
CREATE TABLE HOTEL.USER_ROLES(
    USER_NAME VARCHAR(15) NOT NULL,
    ROLE_NAME VARCHAR(15) NOT NULL
);            
ALTER TABLE HOTEL.USER_ROLES ADD CONSTRAINT HOTEL.CONSTRAINT_C PRIMARY KEY(USER_NAME, ROLE_NAME);      
CREATE TABLE HOTEL.USERS(
    USER_NAME VARCHAR(15) NOT NULL,
    USER_PASS VARCHAR(15) NOT NULL
); 
ALTER TABLE HOTEL.USERS ADD CONSTRAINT HOTEL.CONSTRAINT_4D PRIMARY KEY(USER_NAME);  

ALTER TABLE HOTEL.CUSTOMER_RECORD ADD CONSTRAINT HOTEL.CONSTRAINT_385 FOREIGN KEY(ROOM_ID) REFERENCES HOTEL.ROOM(ID) NOCHECK; 
ALTER TABLE HOTEL.CUSTOMER_RECORD ADD CONSTRAINT HOTEL.CONSTRAINT_111 FOREIGN KEY(CUSTOMER_ID) REFERENCES HOTEL.CUSTOMER(ID) NOCHECK; 
ALTER TABLE HOTEL.CUSTOMER ADD CONSTRAINT HOTEL.FK_RRXTPGQ1UOMD6B2M4GOR56BHI FOREIGN KEY(ADDRESS_ID) REFERENCES HOTEL.ADDRESS(ID) NOCHECK;    
ALTER TABLE HOTEL.ROOM ADD CONSTRAINT HOTEL.CONSTRAINT_26 FOREIGN KEY(HOTEL_ID) REFERENCES HOTEL.HOTEL(ID) NOCHECK;           
ALTER TABLE HOTEL.HOTEL ADD CONSTRAINT HOTEL.CONSTRAINT_11 FOREIGN KEY(ADDRESS_ID) REFERENCES HOTEL.ADDRESS(ID) NOCHECK;           
